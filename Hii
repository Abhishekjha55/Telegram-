import telebot import time import threading import os from pytube import YouTube

Telegram Bot Token

TOKEN = "YOUR_BOT_TOKEN" CHANNEL_USERNAME = "@YourChannel" EXPIRY_TIME = 1800  # 30 ‡§Æ‡§ø‡§®‡§ü ‡§§‡§ï ‡§¨‡•â‡§ü ‡§è‡§ï‡•ç‡§ü‡§ø‡§µ ‡§∞‡§π‡•á‡§ó‡§æ WAIT_TIME = 60  # 1 ‡§Æ‡§ø‡§®‡§ü ‡§Æ‡•á‡§Ç ‡§¨‡•â‡§ü ‡§ñ‡•Å‡§¶ ‡§è‡§ï‡•ç‡§ü‡§ø‡§µ ‡§π‡•ã‡§ó‡§æ MAX_FILE_SIZE_MB = 50  # ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ ‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§æ‡§á‡§ú‡§º

bot = telebot.TeleBot(TOKEN) user_sessions = {}

üìå ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§ï‡§Æ‡§æ‡§Ç‡§°

@bot.message_handler(commands=['start']) def send_start_message(message): chat_id = message.chat.id bot.send_message(chat_id, f"üîπ ‡§™‡§π‡§≤‡•á ‡§á‡§∏ ‡§ö‡•à‡§®‡§≤ ‡§ï‡•ã ‡§ú‡•â‡§á‡§® ‡§ï‡§∞‡•á‡§Ç: {CHANNEL_USERNAME}") user_sessions[chat_id] = {'active': False, 'start_time': time.time()} threading.Thread(target=activate_after_wait, args=(chat_id,)).start()

üîÑ 1 ‡§Æ‡§ø‡§®‡§ü ‡§¨‡§æ‡§¶ ‡§¨‡•â‡§ü ‡§ë‡§ü‡•ã-‡§è‡§ï‡•ç‡§ü‡§ø‡§µ‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®

def activate_after_wait(chat_id): time.sleep(WAIT_TIME) if chat_id in user_sessions and not user_sessions[chat_id]['active']: user_sessions[chat_id]['active'] = True bot.send_message(chat_id, "‚úÖ ‡§¨‡•â‡§ü ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§π‡•ã ‡§ó‡§Ø‡§æ! ‡§Ö‡§¨ ‡§Ü‡§™ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§") threading.Thread(target=expire_session, args=(chat_id,)).start()

‚è≥ 30 ‡§Æ‡§ø‡§®‡§ü ‡§¨‡§æ‡§¶ ‡§¨‡•â‡§ü ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®

def expire_session(chat_id): time.sleep(EXPIRY_TIME) if chat_id in user_sessions: del user_sessions[chat_id] bot.send_message(chat_id, "‚è≥ ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•á‡§∂‡§® ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è /start ‡§¶‡§¨‡§æ‡§è‡§Å‡•§")

üì• ‡§ú‡§¨ ‡§Ø‡•Ç‡§ú‡§∞ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú‡•á

@bot.message_handler(func=lambda message: True) def handle_links(message): chat_id = message.chat.id if chat_id in user_sessions and user_sessions[chat_id]['active']: if any(domain in message.text.lower() for domain in ['instagram.com', 'facebook.com', 'terabox.com', 'youtube.com']): bot.send_message(chat_id, "üîç ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§≤‡§ø‡§Ç‡§ï ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à...") try: yt = YouTube(message.text) stream = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first() if not stream: bot.send_message(chat_id, "‚ùå ‡§ï‡•ã‡§à ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡§®‡•á ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ‡•§") return

file_size_mb = stream.filesize / (1024 * 1024)
            if file_size_mb > MAX_FILE_SIZE_MB:
                bot.send_message(
                    chat_id,
                    f"üé• ‡§Ø‡§π ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã {round(file_size_mb, 2)}MB ‡§ï‡§æ ‡§π‡•à, ‡§ú‡•ã 50MB ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§π‡•à‡•§\n"
                    "üîπ [Watch Video](https://t.me/share/url?url=" + message.text + ")",
                    parse_mode='Markdown'
                )
            else:
                video_file = stream.download()
                with open(video_file, "rb") as video:
                    bot.send_video(chat_id, video)
                os.remove(video_file)
        except Exception as e:
            bot.send_message(chat_id, f"‚ùå ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§≤‡§ø‡§Ç‡§ï ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•à: {e}")
    else:
        bot.send_message(chat_id, "‚ùå ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•á‡§µ‡§≤ Instagram, Facebook, YouTube ‡§Ø‡§æ Terabox ‡§ï‡•Ä ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú‡•á‡§Ç‡•§")
else:
    bot.send_message(chat_id, "‚ö†Ô∏è ‡§™‡§π‡§≤‡•á ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§ï‡§∞‡•á‡§Ç! /start ‡§¶‡§¨‡§æ‡§è‡§Å‡•§")

if name == "main": bot.polling(none_stop=True)

